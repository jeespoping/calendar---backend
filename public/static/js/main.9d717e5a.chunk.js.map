{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-esp.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddnew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","z_index","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","modalOpen","ui","activeEvent","calendar","titlevalid","settitlevalid","fromvalues","setFromvalues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccesor","endAccessor","onDoubleClickEvent","onSelectEvent","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"6OAAMA,EAAUC,2CAGVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACtCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACOE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAK3BQ,EAAgB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACtCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MCrCpBY,EACI,kBADJA,EAEK,mBAFLA,EAKI,uBALJA,EAMO,qBANPA,EAOI,kBAPJA,EAQa,6BARbA,EASK,wBATLA,EAUK,wBAVLA,EAWI,wBAXJA,EAcW,qCAdXA,EAgBE,eAhBFA,EAmBG,gB,wBCjBHC,EAAgB,WAAkB,IAAjBC,EAAgB,uDAAP,GACnC,OAAOA,EAAOC,KACV,SAACC,GAAD,mBAAC,eACMA,GADP,IAEIC,IAAKC,IAAOF,EAAEC,KAAKE,SACnBC,MAAOF,IAAOF,EAAEI,OAAOD,eCwB7BE,EAAc,SAACC,GAAD,MAAY,CAC5BC,KAAMX,EACNY,QAASF,IAQAG,EAAwB,iBAAO,CAACF,KAAMX,IAoB7Cc,EAAe,SAACJ,GAAD,MAAY,CAC7BC,KAAMX,EACNY,QAASF,IA0BPK,EAAe,iBAAO,CAACJ,KAAMX,IAqB7BgB,EAAc,SAACd,GAAD,MAAa,CAC7BS,KAAMX,EACNY,QAASV,ICjDPe,EAAiB,iBAAO,CAACN,KAAMX,IAE/BkB,EAAQ,SAACC,GAAD,MAAW,CACrBR,KAAMX,EACNY,QAASO,IAGAC,EAAc,WACvB,OAAO,SAACC,GACJvB,aAAawB,QACbD,ED0C0B,CAACV,KAAMX,ICzCjCqB,EAASE,OAIXA,EAAS,iBAAO,CAClBZ,KAAMX,I,gBC5EGwB,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAWH,IAITK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,eCdzB,SAASK,IAAe,IAAD,EAEkBV,EAAQ,CACxDW,OAAQ,sBACRC,UAAW,WAJmB,mBAE1BC,EAF0B,KAETC,EAFS,OAOwBd,EAAQ,CAC9De,MAAO,cACPC,OAAQ,mBACRC,WAAY,SACZC,WAAY,WAXkB,mBAO1BC,EAP0B,KAONC,EAPM,KAc3BL,EAAyCI,EAAzCJ,MAAOC,EAAkCG,EAAlCH,OAAQC,EAA0BE,EAA1BF,WAAYC,EAAcC,EAAdD,WAE5BrB,EAAWwB,cAEVV,EAAqBE,EAArBF,OAAQC,EAAaC,EAAbD,UAkBf,OACI,qBAAKU,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SArBF,SAAC3C,GFrBC,IAAC4C,EAAOC,EEsB1B7C,EAAE8C,iBAEF7B,GFxBmB2B,EEwBCb,EFxBMc,EEwBEb,EFvBhC,uCAAO,WAAOf,GAAP,iBAAA8B,EAAA,sEACgBjE,EAAc,OAAQ,CAAC8D,QAAOC,YAAW,QADzD,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,QAEG5D,EAFH,QAIK6D,IACJxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAM,CACXwC,IAAKjE,EAAKiE,IACV1B,KAAMvC,EAAKuC,SAGf2B,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SAb9B,2CAAP,yDEyCgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACInC,KAAK,OACLmC,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAOE,EACP4B,SAAUzB,MAGlB,qBAAKQ,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAOG,EACP2B,SAAUzB,MAGlB,qBAAKQ,UAAU,aAAf,SACI,uBACInC,KAAK,SACLmC,UAAU,YACVb,MAAM,kBAMtB,sBAAKa,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAhDC,SAAC3C,GAGpB,GAFAA,EAAE8C,iBAEET,IAAeC,EACf,OAAOiB,IAAKC,KAAK,QAAS,uCAAqC,SFZ9C,IAACZ,EAAOC,EAAUjB,EEevCX,GFfsB2B,EEeCR,EFfMS,EEeER,EFfQT,EEeIO,EFd/C,uCAAO,WAAOlB,GAAP,iBAAA8B,EAAA,sEACgBjE,EAAc,WAAY,CAAC8D,QAAOC,WAAUjB,QAAO,QADnE,cACGoB,EADH,gBAEgBA,EAAKC,OAFrB,QAEG5D,EAFH,QAIM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAM,CACXwC,IAAKjE,EAAKiE,IACV1B,KAAMvC,EAAKuC,SAGf2B,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SAb9B,2CAAP,yDEuDgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACInC,KAAK,OACLmC,UAAU,eACVgB,YAAY,SACZ7B,MAAOM,EACPP,KAAK,QACL+B,SAAUnB,MAGlB,qBAAKE,UAAU,aAAf,SACI,uBACInC,KAAK,QACLmC,UAAU,eACVgB,YAAY,SACZ7B,MAAOO,EACPR,KAAK,SACL+B,SAAUnB,MAGlB,qBAAKE,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACVgB,YAAY,gBACZ7B,MAAOQ,EACPT,KAAK,aACL+B,SAAUnB,MAIlB,qBAAKE,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACVgB,YAAY,0BACZ7B,MAAOS,EACPV,KAAK,aACL+B,SAAUnB,MAIlB,qBAAKE,UAAU,aAAf,SACI,uBACInC,KAAK,SACLmC,UAAU,YACVb,MAAM,8BC5HvB,SAAS+B,IAAU,IAEvBhC,EAAQiC,aAAa,SAAAC,GAAK,OAAIA,EAAMC,QAApCnC,KACDX,EAAWwB,cAKjB,OACI,sBAAKC,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKd,IAEL,yBACIoC,QAVS,WACjB/C,EAASD,MAUD0B,UAAU,yBAFd,UAII,mBAAGA,UAAU,uBACb,gD,YCtBHuB,G,YAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNrE,MAAO,SACPsE,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCXJ,SAASC,EAAT,GAAiC,IAATzE,EAAQ,EAARA,MAC5B0E,EAAe1E,EAAf0E,MAAOjE,EAAQT,EAARS,KACd,OACI,gCACI,+BAAOiE,IACP,yCAAYjE,EAAKa,W,uCCLhBqD,GAAc,iBAAO,CAAC1E,KAAMX,ICOnCsF,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,IAIfC,IAAMC,cAAc,SAEpB,IAAMC,GAAM3F,MAAS4F,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAC3CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAE,SAE7BG,GAAY,CACdnB,MAAO,GACPoB,MAAO,GACPhG,MAAOyF,GAAI1F,SACXF,IAAKgG,GAAS9F,UAGH,SAASkG,KAAiB,IAAD,EAEF/E,mBAASuE,GAAI1F,UAFX,mBAE7BmG,EAF6B,KAElBC,EAFkB,OAGNjF,mBAAS2E,GAAS9F,UAHZ,mBAG7BqG,EAH6B,KAGpBC,EAHoB,KAM7BC,EAAa7C,aAAa,SAAAC,GAAK,OAAIA,EAAM6C,MAAzCD,UAEAE,EAAe/C,aAAY,SAAAC,GAAK,OAAIA,EAAM+C,YAA1CD,YAR6B,EAUAtF,oBAAS,GAVT,mBAU7BwF,EAV6B,KAUjBC,EAViB,OAYAzF,mBAAS6E,IAZT,mBAY7Ba,EAZ6B,KAYjBC,EAZiB,KAc7Bb,EAA4BY,EAA5BZ,MAAOpB,EAAqBgC,EAArBhC,MAAO5E,EAAc4G,EAAd5G,MAAOH,EAAO+G,EAAP/G,IAE5BiH,qBAAU,WAEFD,EADDL,GAGeT,MAGnB,CAACS,EAAaK,IAEjB,IAAMvF,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBsF,EAAc,2BACPD,GADM,kBAERrF,EAAOC,KAAOD,EAAOE,UAIxBZ,EAAWwB,cAEX0E,EAAa,WAEflG,EDlE2B,CAACV,KAAMX,ICmElCqB,EAASR,KACTwG,EAAcd,KA2ClB,OACI,eAAC,IAAD,CACIiB,OAAQV,EACRW,eAAgBF,EAChBG,MAAOpC,GACPqC,eAAgB,IAChB7E,UAAU,QACV8E,iBAAiB,cANrB,UAQI,mCAAMZ,EAAc,gBAAkB,eAAtC,OACA,uBACA,uBACIlE,UAAU,YACVC,SArCa,SAAC3C,GACtBA,EAAE8C,iBAEF,IRlDyBxC,EQkDnBmH,EAAcvH,IAAOE,GACrBsH,EAAYxH,IAAOD,GAEzB,OAAGwH,EAAYE,cAAcD,GAClBnE,IAAKC,KAAK,QAAS,mDAAoD,SAG/EwB,EAAM4C,OAAOC,OAAS,EACdd,GAAc,IAIrB9F,EADD2F,GR7DsBtG,EQ8DK0G,ER7DlC,uCAAO,WAAO/F,GAAP,iBAAA8B,EAAA,+EAEoBvD,EAAc,UAAD,OAAWc,EAAMwH,IAAMxH,EAAO,OAF/D,cAEO0C,EAFP,gBAGoBA,EAAKC,OAHzB,QAGO5D,EAHP,QAKU6D,GACLjC,EAASP,EAAaJ,IAEtBiD,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SARlC,kDAYCsE,QAAQC,IAAR,MAZD,0DAAP,uDAtC4B,SAAC1H,GAC7B,8CAAO,WAAOW,EAAUgH,GAAjB,uBAAAlF,EAAA,+DAEiBkF,IAAWlE,KAAxBT,EAFJ,EAEIA,IAAK1B,EAFT,EAESA,KAFT,kBAKoBpC,EAAc,SAAUc,EAAO,QALnD,cAKO0C,EALP,gBAMoBA,EAAKC,OANzB,QAMO5D,EANP,QAQU6D,KACL5C,EAAMwH,GAAKzI,EAAK6I,OAAOJ,GACvBxH,EAAMS,KAAO,CACToH,IAAK7E,EACL1B,KAAMA,GAEVX,EAASZ,EAAYC,KAd1B,kDAiBCyH,QAAQC,IAAR,MAjBD,0DAAP,wDQoGiBI,CAAiBpB,IAG9BD,GAAc,QACdI,MAcI,UAKI,sBAAKzE,UAAU,aAAf,UACI,wDACA,cAAC,KAAD,CACIiB,SA3DQ,SAAC3D,GACzBuG,EAAavG,GACbiH,EAAc,2BACPD,GADM,IAET5G,MAAOJ,MAwDK6B,MAAOyE,EACP5D,UAAU,oBAIlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,KAAD,CACIiB,SA5DM,SAAC3D,GACvByG,EAAWzG,GACXiH,EAAc,2BACPD,GADM,IAET/G,IAAKD,MAyDO6B,MAAO2E,EACP6B,QAAS/B,EACT5D,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACInC,KAAK,OACLmC,UAAS,wBAAmBoE,GAAc,cAC1CpD,YAAY,uBACZ9B,KAAK,QACL0G,aAAa,MACbzG,MAAOmD,EACPrB,SAAUjC,IAEd,uBAAOoG,GAAG,YAAYpF,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACInC,KAAK,OACLmC,UAAU,eACVgB,YAAY,QACZ6E,KAAK,IACL3G,KAAK,QACLC,MAAOuE,EACPzC,SAAUjC,IAEd,uBAAOoG,GAAG,YAAYpF,UAAU,uBAAhC,yCAGJ,yBACInC,KAAK,SACLmC,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,qDClLL,SAAS8F,KACpB,IAAMvH,EAAWwB,cAMjB,OACI,wBACIuB,QANgB,WACpB/C,EAASgE,OAMLvC,UAAU,sBAFd,SAII,mBAAGA,UAAU,kBCZV,SAAS+F,KACpB,IAAMxH,EAAWwB,cAMjB,OACI,yBACIC,UAAU,4BACVsB,QAPa,WACjB/C,EV4DJ,uCAAO,WAAOA,EAAUgH,GAAjB,mBAAAlF,EAAA,6DAEI+E,EAAMG,IAAWpB,SAASD,YAA1BkB,GAFJ,kBAKoBtI,EAAc,UAAD,OAAWsI,GAAM,GAAI,UALtD,cAKO9E,EALP,gBAMoBA,EAAKC,OANzB,QAMO5D,EANP,QAQU6D,GACLjC,EAASN,KAET4C,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SAXlC,kDAeCsE,QAAQC,IAAR,MAfD,0DAAP,0DUxDI,UAII,mBAAGtF,UAAU,iBACb,sDCFZxC,IAAOwI,OAAO,MACd,IAAMC,GAAYC,YAAgB1I,KAEnB,SAAS2I,KAAkB,IAAD,EAELvH,mBAAS5B,aAAaC,QAAQ,aAAe,SAFxC,mBAE9BmJ,EAF8B,KAEpBC,EAFoB,KAI/B9H,EAAWwB,cACVa,EAAOO,aAAa,SAAAC,GAAK,OAAIA,EAAMC,QAAnCT,IAEP4D,qBAAU,WACNjG,EXmEJ,uCAAO,WAAOA,GAAP,mBAAA8B,EAAA,+EAGoBvD,EAAc,UAHlC,cAGOwD,EAHP,gBAIoBA,EAAKC,OAJzB,OAIO5D,EAJP,OAMOS,EAASD,EAAcR,EAAK2J,SAElC/H,EAAUL,EAAad,IARxB,kDAWCiI,QAAQC,IAAR,MAXD,0DAAP,yDWlEG,CAAC/G,IATiC,MAWP4C,aAAa,SAAAC,GAAK,OAAIA,EAAM+C,YAAnD/G,EAX8B,EAW9BA,OAAQ8G,EAXsB,EAWtBA,YAgCf,OACI,sBAAKlE,UAAU,kBAAf,UACI,cAACkB,EAAD,IAEA,cAAC,IAAD,CACI+E,UAAWA,GACX7I,OAAQA,EACRmJ,aAAa,QACbC,YAAY,MACZjF,SAAUA,EACVkF,mBAxCU,SAACnJ,GACnBiB,EAASgE,OAwCDmE,cAtCU,SAACpJ,GACnBiB,EXCkC,CACtCV,KAAMX,EACNY,QWH4BR,KAsChBqJ,gBA1BY,SAAC/I,EAAOF,EAAOH,EAAKqJ,GASxC,MAAO,CACHhC,MATU,CACViC,gBAAkBjG,IAAQhD,EAAMS,KAAKoH,IAAQ,UAAY,UACzDqB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAqBHC,OApCS,SAAC5J,GAClB+I,EAAY/I,GACZN,aAAayD,QAAQ,WAAWnD,IAmCxB6J,aAhCS,SAAC7J,GAClBiB,EAASR,MAgCDqJ,YAAY,EACZC,KAAMjB,EACNkB,WAAY,CACR1J,MAAOyE,KAIf,cAACyD,GAAD,IAGI5B,GACI,cAAC6B,GAAD,IAGR,cAACpC,GAAD,O,aCtFC4D,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAEF,OACI,cAAC,IAAD,2BACQA,GADR,IAEID,UAAY,SAACE,GAAD,OACPJ,EACK,cAACC,EAAD,eAAeG,IACf,cAAC,IAAD,CAAUC,GAAG,gBCZtBC,GAAc,SAAC,GAIrB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDACF,OACI,cAAC,IAAD,2BACQA,GADR,IAEID,UAAY,SAACE,GAAD,OACPJ,EACK,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAeG,SCNtB,SAASG,KAEpB,IAAMxJ,EAAWwB,cAFe,EAGRoB,aAAa,SAAAC,GAAK,OAAIA,EAAMC,QAA7C2G,EAHyB,EAGzBA,SAAUpH,EAHe,EAGfA,IAMjB,OAJA4D,qBAAU,WACNjG,Eb8BJ,uCAAO,WAAOA,GAAP,iBAAA8B,EAAA,sEACgBvD,EAAc,cAD9B,cACGwD,EADH,gBAEgBA,EAAKC,OAFrB,QAEG5D,EAFH,QAIM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAM,CACXwC,IAAKjE,EAAKiE,IACV1B,KAAMvC,EAAKuC,SAGfX,EAASJ,KAbV,2CAAP,yDa7BG,CAACI,IAEAyJ,EACO,6CAIP,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WAEI,cAAC,GAAD,CACIC,OAAK,EACLC,KAAK,SACLR,UAAWtI,EACXoI,kBAAmB5G,IAGvB,cAAC,GAAD,CACIqH,OAAK,EACLC,KAAK,IACLR,UAAWvB,GACXqB,kBAAmB5G,IAGvB,cAAC,IAAD,CAAUiH,GAAG,a,sBCvC3BlJ,GAAe,CACjBqJ,UAAU,G,SCWRrJ,GAAe,CACjBvB,OAAQ,GACR8G,YAAa,MCdXvF,GAAe,CACjBqF,WAAW,GCEFmE,GAAcC,aAAgB,CACvCnE,GDAqB,WAAkC,IAAjC7C,EAAgC,uDAAzBzC,GAAc0J,EAAW,uCACtD,OAAQA,EAAOxK,MACX,KAAKX,EACD,kCACOkE,GADP,IAEI4C,WAAW,IAEnB,KAAK9G,EACD,kCACOkE,GADP,IAEI4C,WAAW,IAGnB,QACI,OAAO5C,ICbf+C,SFY2B,WAAmC,IAAlC/C,EAAiC,uDAAzBzC,GAAc0J,EAAW,uCAC7D,OAAQA,EAAOxK,MACX,KAAKX,EACD,OAAO,2BACAkE,GADP,IAEI8C,YAAamE,EAAOvK,UAE5B,KAAKZ,EACD,kCACOkE,GADP,IAEIhE,OAAO,GAAD,oBACCgE,EAAMhE,QADP,CAEFiL,EAAOvK,YAGnB,KAAKZ,EACD,OAAO,2BACAkE,GADP,IAEI8C,YAAa,OAErB,KAAKhH,EACD,kCACOkE,GADP,IAEIhE,OAAQgE,EAAMhE,OAAOC,KACjB,SAAAC,GAAC,OAAKA,EAAE8H,KAAOiD,EAAOvK,QAAQsH,GAAMiD,EAAOvK,QAAUR,OAGjE,KAAKJ,EACD,kCACOkE,GADP,IAEIhE,OAAQgE,EAAMhE,OAAOkL,QACjB,SAAAhL,GAAC,OAAKA,EAAE8H,KAAOhE,EAAM8C,YAAYkB,MAErClB,YAAa,OAGrB,KAAKhH,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAO,aAAMiL,EAAOvK,WAG5B,KAAKZ,EACD,OAAO,eACAyB,IAGX,QACG,OAAOyC,IE3DdC,KHFuB,WAAmC,IAAlCD,EAAiC,uDAAzBzC,GAAc0J,EAAW,uCACzD,OAAQA,EAAOxK,MAEX,KAAKX,EACD,OAAO,uCACAkE,GACAiH,EAAOvK,SAFd,IAGIkK,UAAU,IAGlB,KAAK9K,EACD,OAAO,2BACAkE,GADP,IAEI4G,UAAU,IAElB,KAAK9K,EACD,MAAM,CACF8K,UAAU,GAGlB,QACI,OAAO5G,MIvBbmH,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAQC,aACjBT,GACAI,GACIM,aAAgBC,QCJT,SAASC,KACpB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAACZ,GAAD,M,OCHZiB,IAASC,OACL,cAACF,GAAD,IAEFG,SAASC,eAAe,U","file":"static/js/main.9d717e5a.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventStartaddNew: ['event Start add new'],\r\n    eventLogout: '[event] Logout event',\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddnew: '[event] Add new',\r\n    eventClearActieEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    \r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew', \r\n    authLogout: '[auth] Logout' \r\n    \r\n}","import moment from 'moment';    \r\n\r\nexport const prepareEvents = (events = []) => {    \r\n    return events.map(\r\n        (e) =>({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddnew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddnew = (event) => ({\r\n    type: types.eventAddnew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActieEvent});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));                \r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());                \r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({type: types.eventDeleted,})\r\n\r\nexport const eventStartLoading = () => {\r\n\r\n    return async (dispatch) => {    \r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json(); \r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch( eventLoaded( events ) );\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n} \r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport default function LoginScreen() {\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'jeespopin@gmail.com',\r\n        lPassword: '123456'       \r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'jesus lopez',\r\n        rEmail: 'manuel@gmail.com',\r\n        rPassword1: '123456',  \r\n        rPassword2: '123456'    \r\n    });\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const dispatch = useDispatch();    \r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                value={rName}\r\n                                name=\"rName\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={rEmail}\r\n                                name=\"rEmail\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={rPassword1} \r\n                                name=\"rPassword1\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                value={rPassword2} \r\n                                name=\"rPassword2\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport default function Navbar() {\r\n\r\n    const {name} = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout()); \r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                onClick={handleLogout}\r\n                className=\"btn btn-outline-danger\"\r\n            >\r\n                <i className=\"fa fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport default function CalendarEvent({event}) {\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong> - {user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal})\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal})","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      z_index: 4\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport default function CalendarModal() {\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n\r\n\r\n    const {modalOpen} = useSelector( state => state.ui );\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [titlevalid, settitlevalid] = useState(true)\r\n\r\n    const [fromvalues, setFromvalues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end} = fromvalues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFromvalues(activeEvent);\r\n        }else{\r\n            setFromvalues(initEvent);\r\n        }\r\n        \r\n    }, [activeEvent, setFromvalues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFromvalues({\r\n            ...fromvalues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const closeModal = () => {\r\n        //Todo cerrar moda\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFromvalues(initEvent);\r\n    }\r\n\r\n    const handleStartOnChange = (e) =>{\r\n        setDateStart(e);\r\n        setFromvalues({\r\n            ...fromvalues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndOnChange = (e) => {\r\n        setDateEnd(e)\r\n        setFromvalues({\r\n            ...fromvalues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end)\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayot a la fecha de inicio', 'error')\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return settitlevalid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(fromvalues))\r\n        }else{\r\n            dispatch(eventStartAddNew(fromvalues));\r\n        }       \r\n\r\n        settitlevalid(true)\r\n        closeModal();\r\n    }\r\n\r\n    return (        \r\n        <Modal \r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker \r\n                        onChange={handleStartOnChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker \r\n                        onChange={handleEndOnChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label> \r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titlevalid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport default function AddNewFab() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleOpenModal = () =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={handleOpenModal}\r\n            className=\"btn btn-primary fab\"\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport default function DeleteEventFab() {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() )\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../ui/Navbar';\r\nimport {Calendar,momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-esp';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport default function CalendarScreen() {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    const dispatch = useDispatch();\r\n    const {uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const {events, activeEvent} = useSelector( state => state.calendar );\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGeter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id ) ? '#367cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar \r\n                localizer={localizer}\r\n                events={events}\r\n                startAccesor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                onDoubleClickEvent= {onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                eventPropGetter={eventStyleGeter}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                activeEvent &&\r\n                    <DeleteEventFab />\r\n            }            \r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props } />\r\n                    : <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component {...props } />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {BrowserRouter as Router, Redirect, Switch} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport default function AppRouter() {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <h1>Cargando...</h1>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: 'asdasdafaf',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddnew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActieEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n           return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport AppRouter from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport default function CalendarApp() {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(  \n    <CalendarApp />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}